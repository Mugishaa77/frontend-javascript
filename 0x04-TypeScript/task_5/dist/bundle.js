!function(r){var e={};function n(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return r[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=r,n.c=e,n.d=function(r,e,t){n.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:t})},n.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},n.t=function(r,e){if(1&e&&(r=n(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var o in r)n.d(t,o,function(e){return r[e]}.bind(null,o));return t},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,"a",e),e},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.p="",n(n.s=0)}([function(r,e,n){"use strict";function t(r,e){return{credits:r.credits+e.credits,_majorBrand:"Major"}}function o(r,e){return{credits:r.credits+e.credits,_minorBrand:"Minor"}}n.r(e),n.d(e,"sumMajorCredits",(function(){return t})),n.d(e,"sumMinorCredits",(function(){return o}));console.log("Sum Major Credits:",t({credits:3,_majorBrand:"Major"},{credits:4,_majorBrand:"Major"})),console.log("Sum Minor Credits:",o({credits:2,_minorBrand:"Minor"},{credits:1,_minorBrand:"Minor"}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,